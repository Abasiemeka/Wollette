spring.application.name=wallet

server.port=7075

# Environment Variables
server.address=${SERVER_FULL_URL}
app.jwtSecret=${JWT_SECRET}

# Database Connection Settings
#Uncomment after properly setting up .env
#spring.datasource.url=${DATASOURCE_URL}
#spring.datasource.username=${DATASOURCE_USERNAME}
#spring.datasource.password=${DATASOURCE_PASSWORD}
#spring.datasource.driver-class-name=${DATASOURCE_DRIVER}

#Remove after properly setting up .env
spring.datasource.url=jdbc:postgresql://localhost:5432/wollette
spring.datasource.username=postgresql
spring.datasource.password=Godislov3
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate settings
spring.jpa.database-platform= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.format_sql=true

# Logging Properties
logging.level.org.springframework=info


# OAuth2 Configuration (For later use)
#spring.security.oauth2.client.registration.google.client-id=428517625913-c5mvsjiqr0esdegu6dfrjla9calrq5dq.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.scope=openid,email,profile
#spring.security.oauth2.client.registration.google.redirect-uri=https://127.0.0.1:7075/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

